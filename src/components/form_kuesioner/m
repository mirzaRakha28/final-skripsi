import  { useState,useEffect } from 'react';
import Close from "@material-ui/icons/Close";
import axios from "axios";
const MultipleChoice  = ({id_kuesioner,id,jawaban,setIndex,setJawaban,initOption,setInitOption,initPertanyaanS,setInitPertanyaanS,indexButton}) => {
    const myparam = id;
    const [option, setOption] = useState([]);
    const [section, setSection] = useState([]);
    const [sectionP, setSectionP] = useState([]);
    useEffect(() => {
        
        const fetchData = async ()=>{
            
        
            axios.get(`http://localhost:5000/kuesioner/options1/${myparam}`)
              .then(
                  response=> {
                    //   console.log(response.data.message[0])
                    setOption(response.data.message)

                  }
              ).catch(err => console.log(err))
          }
          fetchData();
          let array=[]
      }, []);
    
    
    const pushJawaban = (Oid,Oid_pertanyaan)=>(e)=>{
        const arr = [...jawaban];arr[setIndex]=e.target.value;setJawaban(arr)
        // setInitOption(initOption.concat(Oid))
        axios.get(`http://localhost:5000/options/section/pertanyaan/${Oid_pertanyaan}/${Oid}`)
        .then(
            response=> {
                if(response.data.message.length !== 0){
                    const found = initOption.find(element => element == Oid_pertanyaan);
                    
                    if(found == undefined){
                        setInitOption(initOption.concat(Oid_pertanyaan))
                    }
                    const found1 = initOption.indexOf(Oid_pertanyaan);
                    if(found1 !== -1){
                        initPertanyaanS[found1] = Oid
                        setInitPertanyaanS(initPertanyaanS)
                    }
                    if(found == undefined){
                        
                        setInitPertanyaanS(initPertanyaanS.concat(Oid))
                    }
                    console.log(arr.length)
                    console.log(arr)
                    for(let a = setIndex ; a < arr.length ; a++){
                        if(setIndex < a ){
                            arr[a] = undefined 
                        }
                        // arr[a] = undefined
                    }
                }else{
                    console.log("m2")
                    if(initOption==Oid_pertanyaan){
                        // /pertanyaan/section/:id
                        axios.get(`http://localhost:5000/pertanyaan/section/${Oid_pertanyaan}`)
                        .then(
                            result=>{
                               if(result.data.message.length != 0 ){
                                var data = initOption
                                data[indexButton] = -1
                                setInitOption(data)
                                data = initOption
                                
                                data[indexButton] = -1
                                setInitPertanyaanS(data)
                               }
                            }
                        )
                        
                    }
                }
            }
        )
        
        
    }
    const OptionById=(index)=>{
        var data =[]
        for(var a = 0;a < option.length;a++){
            if(option[a].id_pertanyaan == myparam){
                data.push(
                    <>
                    <div class="row" style={{marginBottom:"20px"}}>  
                        <div class="col-sm-12 col-7">
                            <div class="form-control form_name ">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name={option[a].id_pertanyaan} checked={jawaban[setIndex] === option[a].option} id="exampleRadios1" value={option[a].option} onClick={pushJawaban(option[a].id,option[a].id_pertanyaan)} required/>
                                    <label class="form-check-label" for="exampleRadios1">
                                        <p>{option[a].option}</p>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div> 
                    </>
                )
            }
        }
        return data
    }
    const renderOption =  () => {
            return(
                <>
                {OptionById()} 
                </>
            )
        
    }
    return(
        <>
            {/* <h1>{jawaban}</h1> */}
            {
                // option.map((que,i)=>(
                    // <>
                        renderOption()  
                        
                    // </>
                    
                // ))
            }
            
        </>
    )
}


export default MultipleChoice;